/*
 * This file is generated by jOOQ.
 */
package gensrc.tables.daos;


import gensrc.tables.RoleMaster;
import gensrc.tables.records.RoleMasterRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleMasterDao extends DAOImpl<RoleMasterRecord, gensrc.tables.pojos.RoleMaster, Integer> {

    /**
     * Create a new RoleMasterDao without any configuration
     */
    public RoleMasterDao() {
        super(RoleMaster.ROLE_MASTER, gensrc.tables.pojos.RoleMaster.class);
    }

    /**
     * Create a new RoleMasterDao with an attached configuration
     */
    public RoleMasterDao(Configuration configuration) {
        super(RoleMaster.ROLE_MASTER, gensrc.tables.pojos.RoleMaster.class, configuration);
    }

    @Override
    public Integer getId(gensrc.tables.pojos.RoleMaster object) {
        return object.getRoleId();
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchRangeOfRoleId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(RoleMaster.ROLE_MASTER.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchByRoleId(Integer... values) {
        return fetch(RoleMaster.ROLE_MASTER.ROLE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>role_id = value</code>
     */
    public gensrc.tables.pojos.RoleMaster fetchOneByRoleId(Integer value) {
        return fetchOne(RoleMaster.ROLE_MASTER.ROLE_ID, value);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(RoleMaster.ROLE_MASTER.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchByRole(String... values) {
        return fetch(RoleMaster.ROLE_MASTER.ROLE, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RoleMaster.ROLE_MASTER.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(RoleMaster.ROLE_MASTER.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RoleMaster.ROLE_MASTER.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<gensrc.tables.pojos.RoleMaster> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(RoleMaster.ROLE_MASTER.UPDATED_ON, values);
    }
}
